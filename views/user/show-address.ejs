
<%-include('../../views/partials/user/_header')%>


<!-- <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet"> -->
    <!-- <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css"> -->
    <style>
        :root {
            --primary-color: #4361ee;
            --secondary-color: #f8f9fa;
            --accent-color: #3f37c9;
            --text-color: #333;
            --border-color: #dee2e6;
            --success-color: #4cc9f0;
            --danger-color: #f72585;
        }

        body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
            background-color: #f5f7fa;
            color: var(--text-color);
            /* line-height: 1.6; */
        }

        .container {
            /* max-width: 1000px; */
            /* margin: 40px auto; */
        }

        .page-header {
            margin-bottom: 30px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .page-title {
            font-weight: 700;
            color: var(--primary-color);
            margin: 0;
        }

        .btn-add-address {
            background-color: var(--primary-color);
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 6px;
            font-weight: 600;
            display: flex;
            align-items: center;
            gap: 8px;
            transition: all 0.3s ease;
        }

        .btn-add-address:hover {
            background-color: var(--accent-color);
            transform: translateY(-2px);
        }

        .address-card {
            background: white;
            border-radius: 12px;
            border: 1px solid var(--border-color);
            padding: 20px;
            margin-bottom: 20px;
            transition: all 0.3s ease;
            position: relative;
            cursor: pointer;
        }

        .address-card:hover {
            box-shadow: 0 10px 20px rgba(0,0,0,0.08);
            transform: translateY(-3px);
        }

        .address-card.selected {
            border: 2px solid var(--primary-color);
            background-color: rgba(67, 97, 238, 0.05);
        }

        .address-card.selected::before {
            content: "âœ“";
            position: absolute;
            top: -10px;
            right: -10px;
            background-color: var(--primary-color);
            color: white;
            width: 25px;
            height: 25px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
            box-shadow: 0 2px 5px rgba(0,0,0,0.2);
        }

        .address-type {
            display: inline-block;
            font-size: 12px;
            padding: 4px 10px;
            border-radius: 20px;
            margin-bottom: 10px;
            font-weight: 600;
            background-color: var(--secondary-color);
        }

        .address-type.home {
            background-color: #e9f5ff;
            color: #0072b1;
        }

        .address-type.office {
            background-color: #e9fff5;
            color: #00b15e;
        }

        .address-type.other {
            background-color: #fef7e9;
            color: #b18000;
        }

        .default-badge {
            position: absolute;
            top: 15px;
            right: 15px;
            background-color: var(--success-color);
            color: white;
            padding: 3px 10px;
            border-radius: 20px;
            font-size: 12px;
            font-weight: 600;
        }

        .address-name {
            font-weight: 700;
            font-size: 18px;
            margin-bottom: 5px;
        }

        .address-details {
            color: #555;
            margin-bottom: 20px;
        }

        .address-phone, .address-email {
            color: #666;
            margin-bottom: 3px;
            display: flex;
            align-items: center;
            gap: 6px;
        }

        .address-actions {
            display: flex;
            gap: 10px;
            justify-content: flex-end;
            margin-top: 15px;
        }

        .btn-edit, .btn-delete {
            border: none;
            background: none;
            font-weight: 600;
            display: flex;
            align-items: center;
            gap: 5px;
            padding: 6px 12px;
            border-radius: 4px;
            transition: all 0.2s ease;
            z-index: 10;
        }

        .btn-edit {
            color: var(--primary-color);
        }

        .btn-edit:hover {
            background-color: rgba(67, 97, 238, 0.1);
        }

        .btn-delete {
            color: var(--danger-color);
        }

        .btn-delete:hover {
            background-color: rgba(247, 37, 133, 0.1);
        }

        .empty-state {
            text-align: center;
            padding: 60px 20px;
            background-color: white;
            border-radius: 12px;
            border: 1px dashed var(--border-color);
        }

        .empty-icon {
            font-size: 48px;
            color: var(--primary-color);
            margin-bottom: 20px;
        }

        .empty-title {
            font-weight: 700;
            margin-bottom: 10px;
            color: var(--text-color);
        }

        .empty-text {
            color: #777;
            margin-bottom: 30px;
        }

        .selected-indicator {
            position: absolute;
            top: 20px;
            left: 20px;
            width: 20px;
            height: 20px;
            border-radius: 50%;
            border: 2px solid var(--border-color);
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .selected-indicator.active {
            border-color: var(--primary-color);
            background-color: var(--primary-color);
        }

        .selected-indicator.active::after {
            content: "";
            width: 8px;
            height: 8px;
            background-color: white;
            border-radius: 50%;
        }

        .address-content {
            padding-left: 30px;
        }

        @media (max-width: 768px) {
            .container {
                margin: 20px;
            }
            
            .page-header {
                flex-direction: column;
                align-items: flex-start;
                gap: 15px;
            }
            
            .btn-add-address {
                width: 100%;
                justify-content: center;
            }
        }
    </style>
<%-include('../../views/partials/user/_aside')%>
    <div class="col-md-8">

    <div class="container">
        <div class="page-header">
            <h1 class="page-title">My Addresses</h1>
            <button class="btn-add-address" id="addAddressBtn">
                <a href="addAddress"><i class="bi bi-plus-circle" ></i> Add New Address</a>
            </button>
        </div>

        <div id="addressContainer">
            <!-- Address cards will be populated here -->
        </div>
    </div>
</div>


    <!-- <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script> -->
    <script>
        // Sample address data
       
        async function render(){

        
            const response = await fetch('/api/addresses',{
                method:"GET",
                headers:{"Content-Type":"application/json"}
            })


            const jsonResponse = await response.json()

            if(response.ok){
                renderAddresses(jsonResponse.data)
            }else{
                console.log(jsonResponse.message)
            }
        }
        // Function to render addresses
        function renderAddresses(addresses) {
            const addressContainer = document.getElementById('addressContainer');
            addressContainer.innerHTML = '';

            if (addresses.length === 0) {
                // Show empty state
                addressContainer.innerHTML = `
                    <div class="empty-state">
                        <div class="empty-icon">
                            <i class="bi bi-geo-alt"></i>
                        </div>
                        <h3 class="empty-title">No addresses saved yet</h3>
                        <p class="empty-text">Add a new address to get started with your deliveries</p>
                        <button class="btn-add-address" onclick="document.getElementById('addAddressBtn').click()">
                            <i class="bi bi-plus-circle"></i> Add Your First Address
                        </button>
                    </div>
                `;
                return;
            }

            // Render each address
            addresses.forEach(address => {
                const addressCard = document.createElement('div');
                addressCard.className = `address-card ${address.isDefault ? 'selected' : ''}`;
                addressCard.dataset.id = address._id;
                addressCard.id = address._id
                

                // Create the HTML for the address card
                addressCard.innerHTML = `
                    <span class="selected-indicator ${address.isDefault ? 'active' : ''}"></span>
                    ${address.isDefault ? '<span class="default-badge">Default</span>' : ''}
                    
                    <div class="address-content">
                        <span class="address-type ${address.addressType.toLowerCase()}">${address.addressType}</span>
                        <h3 class="address-name">${address.fullName}</h3>
                        <div class="address-details">
                            ${address.streetAddress}${address.apartment ? ', ' + address.apartment : ''}<br>
                            ${address.city}, ${address.state} ${address.postalCode}<br>
                            ${address.country}
                        </div>
                        
                        <div class="address-phone">
                            <i class="bi bi-telephone"></i> ${address.phoneNumber}
                        </div>
                        
                        <div class="address-email">
                            <i class="bi bi-envelope"></i> ${address.email}
                        </div>
                        
                        ${address.deliveryInstructions ? `
                        <div class="mt-2">
                            <small class="text-muted">
                                <i class="bi bi-info-circle"></i> ${address.deliveryInstructions}
                            </small>
                        </div>
                        ` : ''}
                        
                        <div class="address-actions">
                            <a href="/account/editAddress?id=${address._id}">
                                <button class="btn-edit" data-id="${address._id} ">
                                    <i class="bi bi-pencil"></i> Edit 
                                </button>
                            </a>
                            <button class="btn-delete" onclick="deleteAddress('${address._id}')" data-id="${address._id}">
                                <i class="bi bi-trash"></i> Delete
                            </button>
                        </div>
                    </div>
                `;

                addressContainer.appendChild(addressCard);
            });

            // Add event listeners
            document.querySelectorAll('.address-card').forEach(card => {
                card.addEventListener('click', function(e) {
                    // Don't select if clicking on action buttons
                    if (!e.target.closest('.btn-edit') && !e.target.closest('.btn-delete')) {
                        selectAddress(parseInt(this.dataset.id));
                    }
                });
            });

             }

        // Function to select an address

        // Function to add a new address
        function addAddress() {
           
        }

        // Function to edit an address
        function editAddress(id) {
           

        }
        
    function showAlert(icon, title, timer = 1500) {
        Swal.fire({
        icon: icon, // "success" or "error"
        title: title,
        showConfirmButton: true,
        timer: timer
        });
    }


        // Function to delete an address
        async function deleteAddress(id) {
                const confirmDelete = await Swal.fire({
                title: "Are you sure?",
                text: "You won't be able to recover this coupon!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#d33",
                cancelButtonColor: "#3085d6",
                confirmButtonText: "Yes, delete it!"
            });

            if (confirmDelete.isConfirmed) {
                const response = await fetch("/account/deleteAddress",{
                    method:"DELETE",
                    headers:{'Content-Type':"application/json"},
                    body:JSON.stringify({id})
                })

                const jsonResponce = await response.json()

                if(response.ok){
                    showAlert("success","deleted succesfully")
                    document.getElementById(id).remove()
                }else{
                    showAlert("error",jsonResponce.message)
                }
            }
    }

        // Initialize the page
        document.addEventListener('DOMContentLoaded', function() {
            // Set first address as selected by default
           
            
            // renderAddresses();
            render()
            
            // Add address button event listener
            document.getElementById('addAddressBtn').addEventListener('click', addAddress);
        });
    </script>

<%-include('../../views/partials/user/_footer')%>
