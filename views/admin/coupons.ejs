<%-include('../../views/partials/admin/_header')%>

<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
    <!-- Font Awesome for icons -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <!-- Bootstrap Theme -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootswatch/5.3.0/pulse/bootstrap.min.css" rel="stylesheet">
    <!-- DataTables CSS -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/datatables/1.10.21/css/dataTables.bootstrap5.min.css" rel="stylesheet">

    
<!-- Main Content -->
 
<div class="container">
       

    <!-- Search and Filter -->
    <div class="card border-0 shadow-sm rounded-3 mb-4">
        <div class="card-body">
            <div class="row g-3">
                <div class="col-md-6">
                    <div class="input-group">
                        <span class="input-group-text bg-transparent border-end-0">
                            <i class="fas fa-search text-muted"></i>
                        </span>
                        <input type="text" class="form-control border-start-0" placeholder="Search coupons...">
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="d-flex gap-2">
                        <button class="btn btn-outline-primary rounded-pill">
                            <i class="fas fa-filter me-1"></i>Filter
                        </button>
                        <select class="form-select">
                            <option selected>Status: All</option>
                            <option>Status: Active</option>
                            <option>Status: Inactive</option>
                        </select>
                        <select class="form-select">
                            <option selected>Sort By: Newest</option>
                            <option>Sort By: Expiry</option>
                            <option>Sort By: Value</option>
                        </select>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Filter Tags -->
    <div class="d-flex flex-wrap gap-2 mb-4">
        <span class="badge bg-primary rounded-pill px-3 py-2">
            <i class="fas fa-tag me-1"></i>All Coupons
        </span>
        <span class="badge bg-light text-dark rounded-pill px-3 py-2">
            <i class="fas fa-check me-1"></i>Active
        </span>
        <span class="badge bg-light text-dark rounded-pill px-3 py-2">
            <i class="fas fa-times me-1"></i>Inactive
        </span>
        <span class="badge bg-light text-dark rounded-pill px-3 py-2">
            <i class="fas fa-clock me-1"></i>Expiring Soon
        </span>
        <span class="badge bg-light text-dark rounded-pill px-3 py-2">
            <i class="fas fa-percentage me-1"></i>High Value
        </span>
    </div>

    <!-- Coupons Table -->
    <button type="button" class="btn btn-primary btn-add-coupon" data-bs-toggle="modal" data-bs-target="#addCouponModal">
        <i class="fas fa-plus"></i> Add New Coupon
    </button>
    <div class="card border-0 shadow-sm rounded-3 mb-4">
      <div class="card-header bg-white py-3">
          <h5 class="card-title mb-0">
              <i class="fas fa-list text-primary me-2"></i>All Coupons
          </h5>
      </div>
      <div class="card-body">
          <div class="table-responsive">
              <table id="couponsTable" class="table table-hover">
                  <thead class="table-light">
                      <tr>
                          <th>Description</th>
                          <th>Code</th>
                          <th>Discount</th>
                          <th>Min Amount</th>
                          <th>Max Discount</th>
                          <th>Expiry Date</th>
                          <th>Status</th>
                          <th>Actions</th>
                      </tr>
                  </thead>
                  <tbody>
                    <% for(let i = 0; i < coupons.length; i++) { %>
                        <tr class="align-middle" id="<%= coupons[i]._id %>" data-id="<%= coupons[i]._id %>">
                            <td class="coupon-name"><%= coupons[i].name %></td>
                            <td>
                                <span class="badge bg-light text-dark fw-normal px-3 py-2 rounded-3 coupon-code">
                                    <%= coupons[i].code %>
                                </span>
                            </td>
                            <td>
                                <span class="badge bg-success px-3 py-2 rounded-pill coupon-discount">
                                    <%= coupons[i].discountPercentage %>%
                                </span>
                            </td>
                            <td class="coupon-minAmount"><%= coupons[i].minCartAmount %></td>
                            <td class="coupon-maxDiscount"><%= coupons[i].maxDiscountAmount %></td>
                            <td>
                                <span class="badge bg-success bg-opacity-10 text-success px-3 py-2 rounded-pill coupon-expiry">
                                    <i class="fas fa-clock me-1"></i>
                                    <%= coupons[i].expiryDate.toISOString().split('T')[0] %>
                                </span>
                            </td>
                            <td class="coupon-status">
                                <div class="form-check form-switch">
                                    <input class="form-check-input" type="checkbox" role="switch" 
                                           <%= coupons[i].status === '1' ? 'checked' : '' %> >
                                    <label class="form-check-label">
                                        <%= coupons[i].status === '1' ? 'Active' : 'Inactive' %>
                                    </label>
                                </div>
                            </td>
                            <td>
                                <div class="btn-group">
                                    <button class="btn btn-sm btn-primary" onclick="edit('<%= coupons[i]._id %>')">
                                        <i class="fas fa-edit"></i>
                                    </button>
                                    <button class="btn btn-sm btn-outline-danger" onclick="deleteCoupon('<%= coupons[i]._id %>')">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </div>
                            </td>
                        </tr>
                        
                    <% } %>
                    
                  </tbody>
              </table>
          </div>
      </div>
  </div>

  <!-- Add Coupon Modal -->
<div class="modal fade" id="addCouponModal" tabindex="-1" aria-labelledby="addCouponModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg">
      <div class="modal-content">
          <div class="modal-header">
              <h5 class="modal-title" id="addCouponModalLabel">Add New Coupon</h5>
              <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body">
              <form id="couponForm">
                  <div class="row mb-3">
                      <div class="col-md-6">
                          <label for="description" class="form-label">Name</label>
                          <input type="text" class="form-control" id="name" name="name"  onblur="isOnlyletters(event)" placeholder="e.g. Welcome Offer" required>
                      </div>
                      <div id="errorForName"></div>

                      <div class="col-md-6">
                          <label for="code" class="form-label">Coupon Code</label>
                          <input type="text" class="form-control" id="code" name="code" placeholder="e.g. WELCOME10" style="text-transform: uppercase;" required>
                          <div class="form-text">Code should be unique and uppercase.</div>
                      </div>
                      <div id="errorForCouponCode"></div>

                  </div>
                  <div class="row mb-3">
                      <div class="col-md-4">
                          <label for="percentage" class="form-label">Discount Percentage</label>
                          <div class="input-group">
                              <input type="number" class="form-control" name="discountPercentage" id="percentage" min="0" max="100" onblur="validationForPercentage(event)" placeholder="e.g. 10" required>
                              <span class="input-group-text">%</span>
                          </div>
                      </div>
                      <div id="errorForPercentage"></div>

                      <div class="col-md-4">
                          <label for="minAmount" class="form-label">Min Total Amount</label>
                          <div class="input-group">
                              <span class="input-group-text">$</span>
                              <input type="number" class="form-control" name="minCartAmount" id="minAmount" onblur="validateMinCartAmount(event)" min="0" step="0.01" placeholder="e.g. 50.00" required>
                          </div>
                      </div>
                      <div id="errorForMinCartAmount"></div>
                      <div class="col-md-4">
                          <label for="maxDiscount" class="form-label">Max Discount</label>
                          <div class="input-group">
                              <span class="input-group-text">$</span>
                              <input type="number" class="form-control" name="maxDiscountAmount" id="maxDiscount" onblur="validateMaxDiscount(event)" min="0" step="0.01"  placeholder="e.g. 100.00" required>
                          </div>
                      </div>
                      <div id="errorForMaxDiscount"></div>

                  </div>
                  <div class="row mb-3">
                      <div class="col-md-6">
                          <label for="expiryDate" class="form-label">Expiry Date</label>
                          <input type="date" class="form-control" name="expiryDate" id="expDate" required>
                      </div>
                      <div id="errorForExpiryDate"></div>

                      <div class="col-md-6">
                          <label for="isActive" class="form-label">Status</label>
                          <select class="form-select" name="status" id="isActive" required>
                              <option value="1" selected>Active</option>
                              <option value="0">Inactive</option>
                          </select>
                      </div>
                  </div>
              </form>
          </div>
          <div class="modal-footer">
              <button type="button" class="btn btn-secondary" id="cancel" data-bs-dismiss="modal">Cancel</button>
              <button type="button" class="btn btn-primary" id="saveCoupon" >Save Coupon</button>
          </div>
      </div>
  </div>
</div>
<button type="button" id="edit-btn" hidden class="btn btn-primary btn-edit-coupon" data-bs-toggle="modal" data-bs-target="#editCouponModal">

</button>
  <!-- Edit Coupon Modal -->
  <div class="modal fade" id="editCouponModal" tabindex="-1" aria-labelledby="editCouponModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editCouponModalLabel">Edit Coupon</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="editCouponForm">
                    <input type="text" hidden id="id" name="id">
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label for="description" class="form-label">Name</label>
                            <input type="text" class="form-control" id="editName" name="name"  onblur="isOnlyletters(event)" placeholder="e.g. Welcome Offer" required>
                        </div>
                        <div id="errorForName"></div>
  
                        <div class="col-md-6">
                            <label for="code" class="form-label">Coupon Code</label>
                            <input type="text" class="form-control" id="editCode" name="code" placeholder="e.g. WELCOME10" style="text-transform: uppercase;" required>
                            <div class="form-text">Code should be unique and uppercase.</div>
                        </div>
                        <div id="errorForCouponCode"></div>
  
                    </div>
                    <div class="row mb-3">
                        <div class="col-md-4">
                            <label for="percentage" class="form-label">Discount Percentage</label>
                            <div class="input-group">
                                <input type="number" class="form-control" name="discountPercentage" id="editPercentage" min="0" max="100" onblur="validationForPercentage(event)" placeholder="e.g. 10" required>
                                <span class="input-group-text">%</span>
                            </div>
                        </div>
                        <div id="errorForPercentage"></div>
  
                        <div class="col-md-4">
                            <label for="minAmount" class="form-label">Min Total Amount</label>
                            <div class="input-group">
                                <span class="input-group-text">$</span>
                                <input type="number" class="form-control" name="minCartAmount" id="editMinAmount" onblur="validateMinCartAmount(event)" min="0" step="0.01" placeholder="e.g. 50.00" required>
                            </div>
                        </div>
                        <div id="errorForMinCartAmount"></div>
                        <div class="col-md-4">
                            <label for="maxDiscount" class="form-label">Max Discount</label>
                            <div class="input-group">
                                <span class="input-group-text">$</span>
                                <input type="number" class="form-control" name="maxDiscountAmount" id="editMaxDiscount" onblur="validateMaxDiscount(event)" min="0" step="0.01"  placeholder="e.g. 100.00" required>
                            </div>
                        </div>
                        <div id="errorForMaxDiscount"></div>
  
                    </div>
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label for="expiryDate" class="form-label">Expiry Date</label>
                            <input type="date" class="form-control" name="expiryDate" id="editExpDate" required>
                        </div>
                        <div id="errorForExpiryDate"></div>
  
                        <div class="col-md-6">
                            <label for="isActive" class="form-label">Status</label>
                            <select class="form-select" name="status" id="EditIsActive" required>
                                <option value="1" selected>Active</option>
                                <option value="0">Inactive</option>
                            </select>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" id="cancelEdit" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="saveEditCoupon" >Save Coupon</button>
            </div>
        </div>
    </div>
  </div>
  

  
</div>
<!-- Pagination -->
<div class="p-3 bg-white border-top">
    <nav aria-label="Customer list pagination" style="margin-bottom: 17px;">
      <ul class="pagination custom-pagination justify-content-center mb-0">
        <!-- <li class="page-item disabled">
          <a class="page-link" href="#" tabindex="-1"><i class="bi bi-chevron-left"></i></a>
        </li> -->

        <% for(let i=1;i<=totalPages;i++){%>
        <li class="page-item <%= (i===currentPage)?'active':'' %>">
          <a class="page-link" href="?page=<%=i%>"> <%= i%></a>
        </li>
        <%}%>

        <!-- <li class="page-item">
          <a class="page-link" href="#"><i class="bi bi-chevron-right"></i></a>
        </li> -->
      </ul>
    </nav>
  </div>

<!-- Bootstrap and jQuery JS -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<!-- <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script> -->




<script>
    function isNegative(num){
       return num >=0
            
    }

    function validateMinCartAmount(num){
        num = num.target?.value || num
        if(!isNegative(num)){
            document.getElementById("errorForMinCartAmount").innerHTML = '<p class="text-danger"><small> Number should be positive</small></p>'
        }else{
            document.getElementById("errorForMinCartAmount").innerHTML =""
            return true

        }
    }

    function validateMaxDiscount(num){
        num = num.target?.value || num
        const minCartValue = document.getElementById("minAmount").value || document.getElementById("editMinAmount").value
        console.log( typeof +minCartValue);
        
        if(!isNegative(num)){
            document.getElementById("errorForMaxDiscount").innerHTML = '<p class="text-danger"><small> Number should be positive</small></p>'
        }else if(minCartValue < num){
            console.log("djhfjk")
            document.getElementById("errorForMaxDiscount").innerHTML = '<p class="text-danger"><small>Discount should always be less that total amount</small></p>'
 
        }else{
            document.getElementById("errorForMaxDiscount").innerHTML = ''
            return true

        }
    }
    
    document.getElementById("expDate").addEventListener("change", function() {
    const expDate = this.value;
    if (!isFutureDate(expDate)) {
        document.getElementById("errorForExpiryDate").innerHTML = '<p class="text-danger"><small>Expiration date must be in the future!</small></p>'
 
        this.value = ""; // Clear input if invalid
    }
});
    function isFutureDate(expDate) {
    const today = new Date();
    today.setHours(0, 0, 0, 0); // Remove time part to compare only dates

    const inputDate = new Date(expDate);
    return inputDate > today; // Check if input date is in the future
}

    function isOnlyletters(str){
        str = str.target?.value || str
        if(!(/^[A-Za-z]+$/.test(str) || /\S/.test(str))){
        document.getElementById("errorForName").innerHTML = '<p class="text-danger"><small>please enter a valid name</small></p>'
        }else{
        document.getElementById("errorForName").innerHTML = ''
        return true


        }
    }

    function validationForPercentage(num){
        num = num.target?.value || num
        console.log(typeof num)
        console.log(!(num >=0 && num <= 100))
        if(!(num >=0 && num <= 100)){
        document.getElementById("errorForPercentage").innerHTML = '<p class="text-danger"><small>Enter a valid percentage under 100</small></p>'
        }else{
        document.getElementById("errorForPercentage").innerHTML = ''
        
        return true
        }
    }

    document.getElementById("saveCoupon").addEventListener("click",async(e)=>{
    const name = document.getElementById("name").value
    const code = document.getElementById("code").value
    const percentage = document.getElementById("percentage").value
    const mincartAmount = document.getElementById("minAmount").value
    const maxDiscount = document.getElementById("maxDiscount").value
    const expiryDate = document.getElementById("expDate").value
    if(!validateMaxDiscount(maxDiscount) ||
        !validateMinCartAmount(mincartAmount) ||
        !validationForPercentage(percentage) ||
        !isFutureDate(expiryDate) || 
        !isOnlyletters(name))
        {
            Swal.fire({
            icon: "error",
            title: "please enter valid values",
            showConfirmButton: true,
            timer: 1500
            });
            return 
        }
    const fromData = new FormData(document.getElementById("couponForm"));
    const jsonData = {};

    fromData.forEach((value,key)=>{
        jsonData[key] = value
    });

    const responce = await fetch("/addCoupons",{
        method:"POST",
        headers:{"Content-Type":"application/json"},
        body:JSON.stringify(jsonData)
    })

    const jsonResponce = await responce.json()

    if(responce.ok){

        Swal.fire({
        icon: "success",
        title: jsonResponce.message,
        showConfirmButton: true,
        timer: 1500
        });
    document.getElementById("cancel").click()
    document.getElementById("couponForm").reset()
            
    }else{

        Swal.fire({
        icon: "success",
        title: jsonResponce.message,
        showConfirmButton: true,
        timer: 1500
        });

    }
    


})

    async  function edit(id){
        try {
            console.log(id)
            console.log(JSON.stringify({id}))
            if(!id){
                return 
            }
            const responce = await fetch('coupon/editCoupons',{
                method:"POST",
                headers:{'Content-Type':"application/json"},
                body:JSON.stringify({id})
            })

           const jsonResponse = await responce.json()

            if(responce.ok){
                console.log(jsonResponse.data)
                document.getElementById("id").value = jsonResponse.data._id || ""
                document.getElementById("editName").value = jsonResponse.data.name || "";
                document.getElementById("editCode").value = jsonResponse.data.code || "";
                document.getElementById("editPercentage").value = jsonResponse.data.discountPercentage || 0;
                document.getElementById("editMinAmount").value = jsonResponse.data.minCartAmount || 0;
                document.getElementById("editMaxDiscount").value = jsonResponse.data.maxDiscountAmount || 0;
                document.getElementById("editExpDate").value = jsonResponse.data.expiryDate ? jsonResponse.data.expiryDate.split("T")[0] : "";
                document.getElementById("EditIsActive").value = jsonResponse.data.status || "1";

                let modal = new bootstrap.Modal(document.getElementById("editCouponModal"));
                modal.show();

            }else{
                console.log(jsonResponse.data)
            }


        } catch (error) {
            console.log(error)
        }
    }

    function showAlert(icon, title, timer = 1500) {
        Swal.fire({
        icon: icon, // "success" or "error"
        title: title,
        showConfirmButton: true,
        timer: timer
        });
    }

    document.getElementById("saveEditCoupon").addEventListener("click",async ()=>{
   
    // Get values from input fields
    // const id = document.getElementById("editId").value; // Hidden field for coupon ID
    const name = document.getElementById("editName").value;
    const code = document.getElementById("editCode").value;
    const percentage = document.getElementById("editPercentage").value;
    const minCartAmount = document.getElementById("editMinAmount").value;
    const maxDiscount = document.getElementById("editMaxDiscount").value;
    const expiryDate = document.getElementById("editExpDate").value;

    // Validation checks
    console.log("max"+ maxDiscount)
    if (
        !validateMaxDiscount(maxDiscount) ||
        !validateMinCartAmount(minCartAmount) ||
        !validationForPercentage(percentage) ||
        !isFutureDate(expiryDate) ||
        !isOnlyletters(name)
    ) {

        showAlert("error", "Please enter valid values");
        return;
    }

    // Create JSON data from form fields
    const formData = new FormData(document.getElementById("editCouponForm"));
    const jsonData = {};
    formData.forEach((value, key) => {
        jsonData[key] = value;
    });

    // Include the coupon ID in the request
    

    try {
        // Send request to update coupon
        const response = await fetch("coupon/editCoupons", {
            method: "PUT",  // Ensure the backend handles editing via POST or PUT
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(jsonData)
        });

        const jsonResponse = await response.json();

        if (response.ok) {
            updateCouponRow(jsonResponse.data)
            showAlert("success", jsonResponse.message);
            
            // Close modal and reset form
            document.getElementById("cancelEdit").click();
            document.getElementById("editCouponForm").reset();
        } else {
            showAlert("error", jsonResponse.message);
        }
    } catch (error) {
        console.error("Error updating coupon:", error);
        showAlert("error", "An error occurred. Please try again.");
    }
   
 })


    const updateCouponRow = (updatedCoupon) => {
    const row = document.querySelector(`tr[data-id="${updatedCoupon._id}"]`);
    if (!row) return;

    // Update row values
    row.querySelector(".coupon-name").textContent = updatedCoupon.name;
    row.querySelector(".coupon-code").textContent = updatedCoupon.code.toUpperCase();
    row.querySelector(".coupon-discount").textContent = updatedCoupon.discountPercentage + "%";
    row.querySelector(".coupon-minAmount").textContent = "$" + updatedCoupon.minCartAmount;
    row.querySelector(".coupon-maxDiscount").textContent = "$" + updatedCoupon.maxDiscountAmount;
    row.querySelector(".coupon-expiry").textContent = updatedCoupon.expiryDate.split("T")[0];

    // Update status
    const statusSwitch = row.querySelector(".coupon-status input");
    statusSwitch.checked = updatedCoupon.status === "1";
    statusSwitch.nextElementSibling.textContent = updatedCoupon.status === "1" ? "Active" : "Inactive";

    Swal.fire({
        icon: "success",
        title: "Coupon updated successfully!",
        showConfirmButton: true,
        timer: 1500
    });
};


    async function deleteCoupon(couponId) {
    // Show confirmation popup
    const confirmDelete = await Swal.fire({
        title: "Are you sure?",
        text: "You won't be able to recover this coupon!",
        icon: "warning",
        showCancelButton: true,
        confirmButtonColor: "#d33",
        cancelButtonColor: "#3085d6",
        confirmButtonText: "Yes, delete it!"
    });

    if (confirmDelete.isConfirmed) {
        try {
            const response = await fetch(`coupon/deleteCoupon/${couponId}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                }
            });

            const result = await response.json();

            if (response.ok) {
                // Show success message
                Swal.fire("Deleted!", result.message, "success");

                // Remove the deleted row from the table
                document.getElementById(`${couponId}`).remove();
            } else {
                // Show error message
                Swal.fire("Error!", result.message, "error");
            }
        } catch (error) {
            console.error("Error deleting coupon:", error);
            Swal.fire("Error!", "Something went wrong!", "error");
        }
    }
}



</script>

<%-include('../../views/partials/admin/_footer')%>
