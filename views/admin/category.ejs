
<%-include('../../views/partials/admin/_header')%>

<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
  <!-- Bootstrap Icons -->
  <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.10.5/font/bootstrap-icons.min.css" rel="stylesheet">
  <style>
    :root {
        /* --primary-color: #4361ee; */
      --danger-color: #ef476f;
      --success-color: #06d6a0;
      /* --light-bg: #f8f9fa; */
      --card-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
      --primary-color: #4361ee;
      --light-bg: #f8f9fa;
      --card-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
    }
    .action-btn {
      border-radius: 50px;
      padding: 6px 16px;
      font-size: 0.85rem;
      font-weight: 500;
      transition: all 0.2s;
    }
    
    .btn-block {
      background-color: #fff;
      color: var(--danger-color);
      border: 1px solid var(--danger-color);
    }
    
    .btn-block:hover {
      background-color: var(--danger-color);
      color: white;
    }
    
    .btn-unblock {
      background-color: #fff;
      color: var(--success-color);
      border: 1px solid var(--success-color);
    }
    
    .btn-unblock:hover {
      background-color: var(--success-color);
      color: white;
    }
    
    body {
      background-color: #f5f7ff;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }
    
    .dashboard-card {
      border-radius: 12px;
      border: none;
      box-shadow: var(--card-shadow);
      overflow: hidden;
      height: 100%;
    }
    
    .card-header {
      background-color: white;
      border-bottom: 1px solid rgba(0,0,0,0.05);
      padding: 16px 20px;
    }
    
    .card-title {
      color: #2d2d2d;
      font-weight: 600;
      margin-bottom: 0;
    }
    
    .btn-primary {
      background-color: var(--primary-color);
      border-color: var(--primary-color);
    }
    
    .btn-primary:hover {
      background-color: #3351dc;
      border-color: #3351dc;
    }
    
    .table-header {
      background-color: rgba(67, 97, 238, 0.05);
      font-weight: 600;
      color: #3a3a3a;
    }
    
    .table>:not(caption)>*>* {
      padding: 12px 16px;
      vertical-align: middle;
    }
    
    .action-btn {
      padding: 5px 8px;
      font-size: 0.85rem;
    }
    
    .badge-count {
      position: absolute;
      top: -8px;
      right: -8px;
      background-color: var(--primary-color);
      color: white;
      border-radius: 50%;
      width: 22px;
      height: 22px;
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 0.7rem;
      font-weight: bold;
    }
    
    .search-container {
      position: relative;
      margin-bottom: 20px;
    }
    
    .search-input {
      padding-left: 40px;
      border-radius: 30px;
      border: 1px solid #e0e0e0;
      box-shadow: 0 2px 5px rgba(0,0,0,0.05);
    }
    
    .search-icon {
      position: absolute;
      left: 15px;
      top: 50%;
      transform: translateY(-50%);
      color: #6c757d;
    }
    
    .category-name {
      font-weight: 600;
      color: #2d2d2d;
    }
    
    .category-description {
      font-size: 0.85rem;
      color: #6c757d;
      max-width: 220px;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
    }
    
    .status-toggle {
      position: relative;
      display: inline-block;
      width: 60px;
      height: 28px;
    }
    
    .status-toggle input {
      opacity: 0;
      width: 0;
      height: 0;
    }
    
    .slider {
      position: absolute;
      cursor: pointer;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background-color: #ccc;
      transition: .4s;
      border-radius: 34px;
    }
    
    .slider:before {
      position: absolute;
      content: "";
      height: 20px;
      width: 20px;
      left: 4px;
      bottom: 4px;
      background-color: white;
      transition: .4s;
      border-radius: 50%;
    }
    
    input:checked + .slider {
      background-color: #2196F3;
    }
    
    input:checked + .slider:before {
      transform: translateX(32px);
    }
    
    .slider-text {
      font-size: 10px;
      color: white;
      position: absolute;
      top: 50%;
      transform: translateY(-50%);
      text-align: center;
      width: 30px;
    }
    
    .slider-text.list {
      right: 5px;
    }
    
    .slider-text.unlist {
      left: 5px;
    }
  </style>
</head>
<body>
  <div class="container py-4">
    <div class="row mb-3">
      <div class="col">
        <h4 class="fw-bold">Category Management</h4>
        <p class="text-muted">Add and manage product categories</p>
      </div>
    </div>
    
    <!-- Search Bar -->
    <div class="row mb-4">
      <div class="col-md-6 offset-md-6">
        <div class="search-container">
          <i class="bi bi-search search-icon"></i>
          <input type="text" class="form-control search-input" id="categorySearch" placeholder="Search categories...">
        </div>
      </div>
    </div>
    
    <div class="row g-4">
      <!-- Add Category Form (Left Side) -->
      <div class="col-md-4">
        <div class="dashboard-card card">
          <div class="card-header">
            <h5 class="card-title">Add New Category</h5>
          </div>
          <div class="card-body">
            <form id="categoryForm" method="post" action="/admin/addCategory"  onsubmit="handleFormSubmit(event)">
                <div id="name-error" class="error-message"></div>
              <div class="mb-3">
                <label for="categoryName" class="form-label">Category Name</label>
                <input type="text" class="form-control" id="name" placeholder="Enter category name" required>
              </div>
              <div id="description-error" class="error-message"></div>

              <div class="mb-3">
                <label for="categoryDescription" class="form-label">Description</label>
                <textarea class="form-control" id="description" rows="3" placeholder="Enter category description"></textarea>
              </div>
              <div class="row mb-3">
                <!-- <div class="col">
                  <label for="offerPrice" class="form-label">Offer Price</label>
                  <div class="input-group">
                    <span class="input-group-text">$</span>
                    <input type="number" class="form-control" id="offerPrice" placeholder="0.00">
                  </div>
                </div> -->
                <div class="col">
                  <label for="offerPercentage" class="form-label">Offer %</label>
                  <div class="input-group">
                    <input type="number" class="form-control" id="discountPercentage" placeholder="0" min="0" max="100">
                    <span class="input-group-text">%</span>
                  </div>
                </div>
              </div>
              <div class="mb-3">
                <label class="form-label d-block">Status</label>
                <div class="form-check form-check-inline">
                  <input class="form-check-input" type="radio" name="statusRadio" id="statusActive" value="1" checked>
                  <label class="form-check-label" for="statusActive">Active</label>
                </div>
                <div class="form-check form-check-inline">
                  <input class="form-check-input" type="radio" name="statusRadio" id="statusInactive" value="0">
                  <label class="form-check-label" for="statusInactive">Inactive</label>
                </div>
              </div>
              <div class="d-grid">
                <button type="submit" class="btn btn-primary" >
                  <i class="bi bi-plus-circle me-2"></i>Add Category
                </button>
              </div>
            </form>
          </div>
        </div>
      </div>
      
      <!-- Category Listing (Right Side) -->
      <div class="col-md-8">
        <div class="dashboard-card card">
          <div class="card-header d-flex justify-content-between align-items-center">
            <h5 class="card-title">Categories</h5>
            
          </div>
          <div class="table-responsive">
            <table class="table mb-0" id="categoryTable">
              <thead>
                <tr class="table-header">
                  <th width="25%">Name & Description</th>

                  <th>Offer %</th>
                  <th>Status</th>
                  <th>List/Unlist</th>
                  <th>Actions</th>
                </tr>
              </thead>
              <tbody id="t-body" class="">
                
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </div>


   <!-- Pagination -->
   <div class="p-3 bg-white border-top">
    <nav aria-label="Customer list pagination" style="margin-bottom: 17px;">
      <ul class="pagination custom-pagination justify-content-center mb-0" id="pagination">
        <!-- <li class="page-item disabled">
          <a class="page-link" href="#" tabindex="-1"><i class="bi bi-chevron-left"></i></a>
        </li> -->

        

        <!-- <li class="page-item">
          <a class="page-link" href="#"><i class="bi bi-chevron-right"></i></a>
        </li> -->
      </ul>
    </nav>
  </div>
</div>

  <!-- Bootstrap JS Bundle with Popper -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
  
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

  <script>
    let search;
    let page
    function handleFormSubmit(event){
        console.log("hofo")
        event.preventDefault();
        
        if(!validateForm()){
            return
        }
        const name = document.getElementById("name").value
        console.log(name);
        const status = document.querySelector('input[name="statusRadio"]:checked').value;
        const description = document.getElementById("description").value
        const discountPercentage = document.getElementById("discountPercentage").value

        fetch('/admin/addCategory',{
            method:"POST",
            headers:{'content-type':'application/json'},
            body:JSON.stringify({name,description,status,discountPercentage})
        }).then((response)=>{
            if(!response.ok){
                return response.json().then(err=>{
                    throw new Error(err.error)
                })
            }
            console.log("success")
            return response.json();
        }).then(data =>{
            Swal.fire({
                    icon:"success",
                    title:"done",
                    text:data.message ,
                    timer:2000
                    // showCloseButton: true, 
                    // confirmButtonText: "Ok",
                      
                }).then((res)=>{
                    
                        getDataForTable()
                
                })
            
        }).catch(error=>{
            if(error.message === "Category already exists"){

            
                Swal.fire({
                    icon:"error",
                    title:"Ooops",
                    text:"Category already exists"      
                })
            }else{
                Swal.fire({
                    icon:"error",
                    title:"Ooops",
                    text:"An error occured while adding the category"      
                })

            }
        })
    }

        function validateForm(){
            clearErrorMessages();
            const name = document.getElementById("name").value.trim()
            const description = document.getElementById("description").value.trim()
            const discountPercentage = document.getElementById("discountPercentage").value
            
            isValid = true
            console.log("val")
            if(name ===""){
                displayErrormessage("name-error","Please enter a name")
                isValid = false
            }
            else if(!/^[a-zA-Z\s]+$/.test(name)){
                displayErrormessage("name-error","category name should contain only alphabetic characters")
                isValid = false

            }
            if (discountPercentage < 0 || discountPercentage > 100) {
                alert('Offer percentage must be between 0 and 100');
                isValid = false
            }
            if(description == ""){
                displayErrormessage("description-error","Please enter a description")
                isValid = false
            }
            return isValid
        }

        function displayErrormessage(elementId,message){
            var errorElement = document.getElementById(elementId)
            console.log(errorElement)
            errorElement.innerHTML = `
            <div class="alert alert-danger" role="alert">
                                    ${message}
            </div>
            `


        }

        function clearErrorMessages(elementId,message){
            var errorElement = document.getElementsByClassName("error-message")
            Array.from(errorElement).forEach(ele=>{
                ele.innerHTML = ""
            })
        }
    
    
  function changePage(Page){
    page = Page
    getDataForTable(search,page)
  }
  async  function getDataForTable(search="",page=1){
      const response = await fetch(`/admin/api/category?search=${search}&page=${page}`,{
        method:"GET",
        headers:{"Content-Type":"application/json"}
      })

      const jsonResponse = await response.json()
      if(response.ok){
          insertCategoryToTable(jsonResponse.categoryData)
          insertPagination(jsonResponse.totalPages,jsonResponse.currentPage)
      }else{

      }
    }

  

  async function insertCategoryToTable(categories) {
    try {
      const parent = document.getElementById("t-body")
      parent.innerHTML = ""

      categories.forEach(category =>{
        const child = document.createElement("tr")
        let listed;
        let listedBtn;
        if(category.isListed){
          listed = '<td><span class="badge bg-success">list</span></td>'
          listedBtn = `<a onclick="changeCategoryStatus('${category.name}','${category._id}','unList')"class="btn action-btn btn-block mt-2" >
                        <i class="bi bi-check-circle me-1"></i>Unlist
                      </a>`
        }else{
          listed = '<td><span class="badge bg-danger">unlist</span></td>'
          listedBtn = `<td>
                      <a  class="btn action-btn btn-unblock" onclick="changeCategoryStatus('${category.name}','${category._id}','list')">
                        <i class="bi bi-slash-circle me-1"></i>List
                      </a>
                    </td>`
        }
        
        child.innerHTML = `
                  <td>
                    <div>
                      <div class="category-name">${category.name}</div>
                      <div class="category-description text-truncate">${category.description}</div>
                    </div>
                  </td>
                  
                  <td>${category?.categoryOffer?.discountPercentage ?? 0}</td>
                  ${listed}
                  ${listedBtn}
                  <td>
                    <a href="/admin/editCategory?id=${category._id}" class="btn btn-sm btn-outline-primary action-btn">
                      <i class="bi bi-pencil"></i> Edit
                    </a>
                  </td>
                </tr>
        `

        parent.appendChild(child)
      })

    } catch (error) {
      console.log(error)
    }
  }
  


  function insertPagination(totalPages,currentPage){

    const parent = document.getElementById("pagination")
    parent.innerHTML = ""
    for(let i=1;i<=totalPages;i++){
      console.log('dj')
      const child = document.createElement("li")
      child.classList.add("page-item")
      if(i == currentPage){
        child.classList.add("active")
      }
      child.innerHTML = `<a onclick="changePage(${i})" class="page-link" > ${i}</a>`
      parent.appendChild(child)
    }

  }

  function debounce(func,timer){

    let timeout;
    return function (...args){
      clearTimeout(timeout)
    timeout = setTimeout(()=>{
        func.apply(this,args)
      },timer)
    }
  }


  function changeCategoryStatus(categoryName,categoryId,action) {
      
      Swal.fire({
        title: "Are you sure?",
        text: `Do you want to ${action} ${categoryName}`,
        icon: "warning",
        showCancelButton: true,
        confirmButtonColor: "#3085d6",
        cancelButtonColor: "#d33",
        confirmButtonText: "Yes"
      }).then(async(result) => {
        if (result.isConfirmed) {

          const response = await fetch(`/admin/api/${action}Category?id=${categoryId}`,{
            method:"PATCH",
            headers:{"Content-Type":"application/json"}
          })

          if(response.ok){
            getDataForTable(search,page)
            Swal.fire({
              title: `${action}ed!`,
              text: `You have ${action}ed ${categoryName}`,
              icon: "success"
            });
          }else{

          }
        }
      });
    }
  
  

    const debounsedFetch = debounce(getDataForTable,500)
  document.addEventListener("DOMContentLoaded",()=>{
    getDataForTable()
    
    document.getElementById("categorySearch").addEventListener("input",(e)=>{
      search = e.target.value
      debounsedFetch(search)

      
    })
  })
 

  </script>
<%-include('../../views/partials/admin/_footer')%>
